import{s as o,b as h}from"./chunk-v4-1760899745229-BX32o4Tt.js";import{extractNetoBrutoFromPDF as u}from"./chunk-v4-1760899745229-iU7ReY_7.js";import"./chunk-v4-1760899745229-Cp1U2DWw.js";import"./chunk-v4-1760899745229-DBZTXvvv.js";import"./chunk-v4-1760899745229-C91sa_mq.js";async function R(){const{data:a,error:c}=await o.from("drivers").select("ime");if(!(c||!a))for(const m of a){const r=m.ime.trim().toLowerCase(),e=await h(r);if(!(!e||e.length===0))for(const l of e){const{data:t,error:p}=await o.storage.from("payrolls").download(`${r}/${l.name}`);if(!(p||!t))try{const s=await t.arrayBuffer(),{neto:n,bruto:i,ukupni_trosak:f}=await u(s);if(n>0||i>0||f>0){const d=await o.from("payroll_amounts").upsert({driver_name:r,file_name:l.name,neto:n,bruto:i,ukupni_trosak:f},{onConflict:["driver_name","file_name"]})}}catch{}}}}export{R as refreshAllPayrolls};

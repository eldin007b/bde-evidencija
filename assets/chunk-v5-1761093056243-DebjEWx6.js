import{s as c,b as u}from"./chunk-v5-1761093056243-B5HUFvW3.js";import{extractNetoBrutoFromPDF as y}from"./chunk-v5-1761093056243-6r4CgLzo.js";import"./chunk-v5-1761093056243-DzTHeiPn.js";import"./chunk-v5-1761093056243-DMSN_ja2.js";import"./chunk-v5-1761093056243-BSPEt4Te.js";async function R(){console.log("[payrollBatchRefresh] Start batch refresh");const{data:e,error:i}=await c.from("drivers").select("ime");if(i||!e){console.warn("[payrollBatchRefresh] Nema vozača ili greška:",i);return}console.log(`[payrollBatchRefresh] Ukupno vozača: ${e.length}`);for(const p of e){const o=p.ime.trim().toLowerCase(),r=await u(o);if(!r||r.length===0){console.warn(`[payrollBatchRefresh] Nema PDF fajlova za vozača: ${o}`);continue}console.log(`[payrollBatchRefresh] Vozač: ${o}, broj PDF fajlova: ${r.length}`);for(const a of r){console.log(`[payrollBatchRefresh] Downloadujem PDF: ${o}/${a.name}`);const{data:f,error:m}=await c.storage.from("payrolls").download(`${o}/${a.name}`);if(m||!f){console.error(`[payrollBatchRefresh] Greška pri downloadu: ${o}/${a.name}`,m);continue}try{const l=await f.arrayBuffer(),{neto:t,bruto:s,ukupni_trosak:n}=await y(l);if(console.log(`[payrollBatchRefresh] Parsed PDF: ${a.name} neto=${t} bruto=${s} ukupni_trosak=${n}`),t>0||s>0||n>0){const h=await c.from("payroll_amounts").upsert({driver_name:o,file_name:a.name,neto:t,bruto:s,ukupni_trosak:n},{onConflict:["driver_name","file_name"]});console.log("[payrollBatchRefresh] Upsert payroll_amounts:",h)}else console.warn(`[payrollBatchRefresh] Nema podataka za upis (${a.name})`)}catch(l){console.error(`[payrollBatchRefresh] Greška pri parsiranju PDF-a ${a.name}:`,l)}}}}export{R as refreshAllPayrolls};
